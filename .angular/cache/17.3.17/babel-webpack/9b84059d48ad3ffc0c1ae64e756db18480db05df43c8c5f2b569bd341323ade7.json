{"ast":null,"code":"export class ExamplesComponent {\n  constructor() {\n    // Profile Form\n    this.profile = {\n      fullName: '',\n      email: '',\n      age: null,\n      bio: '',\n      skills: [],\n      theme: 'light',\n      notifications: {\n        email: false,\n        push: false\n      }\n    };\n    this.availableSkills = ['JavaScript', 'TypeScript', 'Angular', 'React', 'Vue', 'Node.js', 'Python', 'Java'];\n    // Dashboard\n    this.newWidgetType = '';\n    this.widgets = [{\n      type: 'metric',\n      title: 'Total Users',\n      value: '1,234',\n      label: 'Active Users',\n      change: 12.5\n    }, {\n      type: 'chart',\n      title: 'Monthly Growth',\n      data: [{\n        label: 'Jan',\n        value: 65\n      }, {\n        label: 'Feb',\n        value: 78\n      }, {\n        label: 'Mar',\n        value: 82\n      }, {\n        label: 'Apr',\n        value: 91\n      }]\n    }];\n    // Shopping Cart\n    this.availableProducts = [{\n      id: 1,\n      name: 'Laptop',\n      price: 999.99,\n      image: 'https://via.placeholder.com/100x100/667eea/ffffff?text=Laptop'\n    }, {\n      id: 2,\n      name: 'Mouse',\n      price: 29.99,\n      image: 'https://via.placeholder.com/100x100/764ba2/ffffff?text=Mouse'\n    }, {\n      id: 3,\n      name: 'Keyboard',\n      price: 89.99,\n      image: 'https://via.placeholder.com/100x100/667eea/ffffff?text=Keyboard'\n    }];\n    this.cart = [];\n    this.taxRate = 0.08;\n    // Theme Switcher\n    this.themeColors = {\n      primary: '#667eea',\n      secondary: '#764ba2',\n      background: '#ffffff',\n      text: '#333333'\n    };\n  }\n  // Methods\n  toggleSkill(skill) {\n    const index = this.profile.skills.indexOf(skill);\n    if (index > -1) {\n      this.profile.skills.splice(index, 1);\n    } else {\n      this.profile.skills.push(skill);\n    }\n  }\n  isFormValid() {\n    return Boolean(this.profile.fullName && this.profile.email);\n  }\n  saveProfile() {\n    console.log('Profile saved:', this.profile);\n    alert('Profile saved successfully!');\n  }\n  getNotificationStatus() {\n    const notifications = [];\n    if (this.profile.notifications.email) notifications.push('Email');\n    if (this.profile.notifications.push) notifications.push('Push');\n    return notifications.length > 0 ? notifications.join(', ') : 'None';\n  }\n  addWidget() {\n    const widget = this.createWidget(this.newWidgetType);\n    if (widget) {\n      this.widgets.push(widget);\n      this.newWidgetType = '';\n    }\n  }\n  removeWidget(index) {\n    this.widgets.splice(index, 1);\n  }\n  createWidget(type) {\n    switch (type) {\n      case 'chart':\n        return {\n          type: 'chart',\n          title: 'New Chart',\n          data: [{\n            label: 'A',\n            value: Math.floor(Math.random() * 100)\n          }, {\n            label: 'B',\n            value: Math.floor(Math.random() * 100)\n          }, {\n            label: 'C',\n            value: Math.floor(Math.random() * 100)\n          }]\n        };\n      case 'metric':\n        return {\n          type: 'metric',\n          title: 'New Metric',\n          value: Math.floor(Math.random() * 1000),\n          label: 'Units',\n          change: Math.floor(Math.random() * 20) - 10\n        };\n      case 'list':\n        return {\n          type: 'list',\n          title: 'New List',\n          items: [{\n            text: 'Item 1',\n            status: 'pending'\n          }, {\n            text: 'Item 2',\n            status: 'completed'\n          }, {\n            text: 'Item 3',\n            status: 'failed'\n          }]\n        };\n      case 'progress':\n        return {\n          type: 'progress',\n          title: 'New Progress',\n          progress: Math.floor(Math.random() * 100)\n        };\n      default:\n        return null;\n    }\n  }\n  getActiveWidgetsCount() {\n    return this.widgets.length;\n  }\n  addToCart(product) {\n    const existingItem = this.cart.find(item => item.product.id === product.id);\n    if (existingItem) {\n      existingItem.quantity++;\n    } else {\n      this.cart.push({\n        product,\n        quantity: 1\n      });\n    }\n  }\n  removeFromCart(index) {\n    this.cart.splice(index, 1);\n  }\n  increaseQuantity(index) {\n    this.cart[index].quantity++;\n  }\n  decreaseQuantity(index) {\n    if (this.cart[index].quantity > 1) {\n      this.cart[index].quantity--;\n    } else {\n      this.removeFromCart(index);\n    }\n  }\n  getSubtotal() {\n    return this.cart.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\n  }\n  getTax() {\n    return this.getSubtotal() * this.taxRate;\n  }\n  getTotal() {\n    return this.getSubtotal() + this.getTax();\n  }\n  checkout() {\n    alert(`Total: $${this.getTotal().toFixed(2)}\\nThank you for your purchase!`);\n    this.cart = [];\n  }\n  updateTheme() {\n    // This would typically update CSS custom properties\n    console.log('Theme updated:', this.themeColors);\n  }\n  getThemeStyles() {\n    return `\n      --primary-color: ${this.themeColors.primary};\n      --secondary-color: ${this.themeColors.secondary};\n      --background-color: ${this.themeColors.background};\n      --text-color: ${this.themeColors.text};\n      background-color: ${this.themeColors.background};\n      color: ${this.themeColors.text};\n    `;\n  }\n  applyPreset(preset) {\n    const presets = {\n      default: {\n        primary: '#667eea',\n        secondary: '#764ba2',\n        background: '#ffffff',\n        text: '#333333'\n      },\n      dark: {\n        primary: '#4a5568',\n        secondary: '#2d3748',\n        background: '#1a202c',\n        text: '#f7fafc'\n      },\n      ocean: {\n        primary: '#3182ce',\n        secondary: '#2b6cb0',\n        background: '#ebf8ff',\n        text: '#2d3748'\n      },\n      sunset: {\n        primary: '#ed8936',\n        secondary: '#dd6b20',\n        background: '#fffaf0',\n        text: '#744210'\n      }\n    };\n    this.themeColors = {\n      ...presets[preset]\n    };\n    this.updateTheme();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}